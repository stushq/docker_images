pipeline {
    agent {
        kubernetes {
            label 'kaniko'
            defaultContainer 'jnlp'
            yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    some-label: some-label-value
spec:
  containers:
  - name: kaniko
    image: gcr.io/kaniko-project/executor:debug
    command:
    - /busybox/cat
    tty: true
    volumeMounts:
      - name: jenkins-docker-cfg
        mountPath: /kaniko/.docker
  volumes:
  - name: jenkins-docker-cfg
    projected:
      sources:
      - secret:
          name: docker-credentials
          items:
            - key: .dockerconfigjson
              path: config.json
    
    
"""
        }
    }
    
    options {
        buildDiscarder(logRotator(artifactDaysToKeepStr: '', 
                                  artifactNumToKeepStr: '', 
                                  daysToKeepStr: '', 
                                  numToKeepStr: '10'))
    }
    
    stages {
        stage('Build with Kaniko') {
            steps {
      
        container(name: 'kaniko', shell: '/busybox/sh') {
           withEnv(['PATH+EXTRA=/busybox']) {
            sh '''#!/busybox/sh
            /kaniko/executor --context `pwd` -f alpine/java7/Dockerfile --destination stushq/alpine-java7:latest
            '''
           }
        }
        }
      }
    }
}
